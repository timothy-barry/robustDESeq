% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/camp.R
\name{run_robust_nb_regression}
\alias{run_robust_nb_regression}
\title{Run robust NB regression}
\usage{
run_robust_nb_regression(
  Y_list,
  x,
  Z,
  side = "two_tailed",
  h = 15L,
  alpha = 0.1,
  method = "MASS"
)
}
\arguments{
\item{Y_list}{a list of response vectors}

\item{x}{the treatment vector}

\item{Z}{the covariate matrix}

\item{side}{the side of the test, one of "left", "right", or "two_tailed"}

\item{h}{tuning parameter for the anytime-valid permutation test}

\item{alpha}{nominal FDR of the BH procedure}

\item{method}{the method to use to carry out the NB regression under the null model, either "MASS" or "VGAM"}
}
\value{
a data frame containing the rejection set
}
\description{
Run robust NB regression
}
\examples{
############################
# GENERATE MULTIPLE DATASETS
############################
n <- 1000L
m <- 500L
theta <- 10
Z <- MASS::mvrnorm(n = n, mu = c(-0.5, 0.5), Sigma = toeplitz(c(1, 0.5)))
# x <- rbinom(n = n, size = 1, prob = binomial()$linkinv(-1 + as.numeric(Z \%*\% c(0.8, 0.7))))
x <- rbinom(n = n, size = 1, prob = 0.3)
colnames(Z) <- c("1", "2")
family_object <- MASS::negative.binomial(theta)
design_matrix <- cbind(x, Z)
colnames(design_matrix) <- c("x", "z1", "z2")
null_coefs <- log(c(7, 1.0, 0.8, 1.1))
alt_coefs <- log(c(7, 1.1, 0.8, 1.1))
under_null <- sample(c(rep(TRUE, 0.9 * m), rep(FALSE, 0.1 * m)))
Y_list <- sapply(X = seq_len(m), FUN = function(i) {
  generate_glm_data(design_matrix = design_matrix,
  coefficients = if (under_null[i]) null_coefs else alt_coefs,
  family_object = family_object,
  add_intercept = TRUE)
}, simplify = FALSE)
h <- 15L; alpha <- 0.1; theta <- NULL

########################
# STANDARD NB REGRESSION
########################
standard_res <- run_standard_nb_regression(Y_list = Y_list, x = x, Z = Z, side = "right")
get_result_metrics(standard_res, under_null)

######################
# ROBUST NB REGRESSION
######################
robust_res <- run_robust_nb_regression(Y_list = Y_list, x = x, Z = Z, side = "right")
get_result_metrics(robust_res, under_null)

###########################
# REGRESSING OUT COVARIATES
###########################
residual_res <- run_regress_out_covariates_test(Y_list = Y_list, x = x, Z = Z, side = "right")
get_result_metrics(residual_res, under_null)
}
